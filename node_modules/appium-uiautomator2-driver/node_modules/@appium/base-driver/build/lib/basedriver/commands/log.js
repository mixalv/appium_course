"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LogMixin = LogMixin;

require("source-map-support/register");

var _lodash = _interopRequireDefault(require("lodash"));

function LogMixin(Base) {
  class LogCommands extends Base {
    supportedLogTypes;

    async getLogTypes() {
      this.log.debug('Retrieving supported log types');
      return _lodash.default.keys(this.supportedLogTypes);
    }

    async getLog(logType) {
      this.log.debug(`Retrieving '${logType}' logs`);

      if (!(await this.getLogTypes()).includes(logType)) {
        const logsTypesWithDescriptions = _lodash.default.reduce(this.supportedLogTypes, (acc, value, key) => {
          acc[key] = value.description;
          return acc;
        }, {});

        throw new Error(`Unsupported log type '${logType}'. ` + `Supported types: ${JSON.stringify(logsTypesWithDescriptions)}`);
      }

      return await this.supportedLogTypes[logType].getter(this);
    }

  }

  return LogCommands;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9iYXNlZHJpdmVyL2NvbW1hbmRzL2xvZy5qcyJdLCJuYW1lcyI6WyJMb2dNaXhpbiIsIkJhc2UiLCJMb2dDb21tYW5kcyIsInN1cHBvcnRlZExvZ1R5cGVzIiwiZ2V0TG9nVHlwZXMiLCJsb2ciLCJkZWJ1ZyIsIl8iLCJrZXlzIiwiZ2V0TG9nIiwibG9nVHlwZSIsImluY2x1ZGVzIiwibG9nc1R5cGVzV2l0aERlc2NyaXB0aW9ucyIsInJlZHVjZSIsImFjYyIsInZhbHVlIiwia2V5IiwiZGVzY3JpcHRpb24iLCJFcnJvciIsIkpTT04iLCJzdHJpbmdpZnkiLCJnZXR0ZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBR0E7O0FBT08sU0FBU0EsUUFBVCxDQUFtQkMsSUFBbkIsRUFBeUI7QUFJOUIsUUFBTUMsV0FBTixTQUEwQkQsSUFBMUIsQ0FBK0I7QUFLN0JFLElBQUFBLGlCQUFpQjs7QUFFQSxVQUFYQyxXQUFXLEdBQUk7QUFDbkIsV0FBS0MsR0FBTCxDQUFTQyxLQUFULENBQWUsZ0NBQWY7QUFDQSxhQUFPQyxnQkFBRUMsSUFBRixDQUFPLEtBQUtMLGlCQUFaLENBQVA7QUFDRDs7QUFLVyxVQUFOTSxNQUFNLENBQUVDLE9BQUYsRUFBVztBQUNyQixXQUFLTCxHQUFMLENBQVNDLEtBQVQsQ0FBZ0IsZUFBY0ksT0FBUSxRQUF0Qzs7QUFFQSxVQUFJLENBQUMsQ0FBQyxNQUFNLEtBQUtOLFdBQUwsRUFBUCxFQUEyQk8sUUFBM0IsQ0FBb0NELE9BQXBDLENBQUwsRUFBbUQ7QUFDakQsY0FBTUUseUJBQXlCLEdBQUdMLGdCQUFFTSxNQUFGLENBQ2hDLEtBQUtWLGlCQUQyQixFQUVoQyxDQUFDVyxHQUFELEVBQU1DLEtBQU4sRUFBYUMsR0FBYixLQUFxQjtBQUNuQkYsVUFBQUEsR0FBRyxDQUFDRSxHQUFELENBQUgsR0FBV0QsS0FBSyxDQUFDRSxXQUFqQjtBQUNBLGlCQUFPSCxHQUFQO0FBQ0QsU0FMK0IsRUFNaEMsRUFOZ0MsQ0FBbEM7O0FBUUEsY0FBTSxJQUFJSSxLQUFKLENBQ0gseUJBQXdCUixPQUFRLEtBQWpDLEdBQ0csb0JBQW1CUyxJQUFJLENBQUNDLFNBQUwsQ0FBZVIseUJBQWYsQ0FBMEMsRUFGNUQsQ0FBTjtBQUlEOztBQUVELGFBQU8sTUFBTSxLQUFLVCxpQkFBTCxDQUF1Qk8sT0FBdkIsRUFBZ0NXLE1BQWhDLENBQXVDLElBQXZDLENBQWI7QUFDRDs7QUFsQzRCOztBQW9DL0IsU0FBT25CLFdBQVA7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIHJlcXVpcmUtYXdhaXQgKi9cbi8vIEB0cy1jaGVja1xuXG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuXG4vKipcbiAqXG4gKiBAcGFyYW0ge0ZpbmRCYXNlfSBCYXNlXG4gKiBAcmV0dXJucyB7TG9nQmFzZX1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIExvZ01peGluIChCYXNlKSB7XG4gIC8qKlxuICAgKiBAaW1wbGVtZW50cyB7SUxvZ0NvbW1hbmRzfVxuICAgKi9cbiAgY2xhc3MgTG9nQ29tbWFuZHMgZXh0ZW5kcyBCYXNlIHtcbiAgICAvKipcbiAgICAgKiBYWFg6IGR1YmlvdXNcbiAgICAgKiBAdHlwZSB7UmVjb3JkPHN0cmluZyxMb2dUeXBlPERyaXZlcj4+fVxuICAgICAqL1xuICAgIHN1cHBvcnRlZExvZ1R5cGVzO1xuXG4gICAgYXN5bmMgZ2V0TG9nVHlwZXMgKCkge1xuICAgICAgdGhpcy5sb2cuZGVidWcoJ1JldHJpZXZpbmcgc3VwcG9ydGVkIGxvZyB0eXBlcycpO1xuICAgICAgcmV0dXJuIF8ua2V5cyh0aGlzLnN1cHBvcnRlZExvZ1R5cGVzKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAdGhpcyB7RHJpdmVyfVxuICAgICAqL1xuICAgIGFzeW5jIGdldExvZyAobG9nVHlwZSkge1xuICAgICAgdGhpcy5sb2cuZGVidWcoYFJldHJpZXZpbmcgJyR7bG9nVHlwZX0nIGxvZ3NgKTtcblxuICAgICAgaWYgKCEoYXdhaXQgdGhpcy5nZXRMb2dUeXBlcygpKS5pbmNsdWRlcyhsb2dUeXBlKSkge1xuICAgICAgICBjb25zdCBsb2dzVHlwZXNXaXRoRGVzY3JpcHRpb25zID0gXy5yZWR1Y2UoXG4gICAgICAgICAgdGhpcy5zdXBwb3J0ZWRMb2dUeXBlcyxcbiAgICAgICAgICAoYWNjLCB2YWx1ZSwga2V5KSA9PiB7XG4gICAgICAgICAgICBhY2Nba2V5XSA9IHZhbHVlLmRlc2NyaXB0aW9uO1xuICAgICAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgICAgICB9LFxuICAgICAgICAgIHt9LFxuICAgICAgICApO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgYFVuc3VwcG9ydGVkIGxvZyB0eXBlICcke2xvZ1R5cGV9Jy4gYCArXG4gICAgICAgICAgICBgU3VwcG9ydGVkIHR5cGVzOiAke0pTT04uc3RyaW5naWZ5KGxvZ3NUeXBlc1dpdGhEZXNjcmlwdGlvbnMpfWAsXG4gICAgICAgICk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBhd2FpdCB0aGlzLnN1cHBvcnRlZExvZ1R5cGVzW2xvZ1R5cGVdLmdldHRlcih0aGlzKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIExvZ0NvbW1hbmRzO1xufVxuXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnQGFwcGl1bS90eXBlcycpLkxvZ0NvbW1hbmRzfSBJTG9nQ29tbWFuZHNcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ0BhcHBpdW0vdHlwZXMnKS5Ecml2ZXJ9IERyaXZlclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9maW5kJykuRmluZEJhc2V9IEZpbmRCYXNlXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9kcml2ZXInKS5CYXNlRHJpdmVyQmFzZTxpbXBvcnQoJ0BhcHBpdW0vdHlwZXMnKS5UaW1lb3V0Q29tbWFuZHMgJiBpbXBvcnQoJ0BhcHBpdW0vdHlwZXMnKS5FdmVudENvbW1hbmRzICYgaW1wb3J0KCdAYXBwaXVtL3R5cGVzJykuRmluZENvbW1hbmRzICYgSUxvZ0NvbW1hbmRzPn0gTG9nQmFzZVxuICovXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ0BhcHBpdW0vdHlwZXMnKS5Mb2dUeXBlPFQ+fSBMb2dUeXBlXG4gKi9cbiJdfQ==