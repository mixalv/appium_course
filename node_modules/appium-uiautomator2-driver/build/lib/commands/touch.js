"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

let commands = {},
    extensions = {};

commands.doPerformMultiAction = async function (elementId, states) {
  let opts;

  if (elementId) {
    opts = {
      elementId,
      actions: states
    };
    return await this.uiautomator2.jwproxy.command('/touch/multi/perform', 'POST', opts);
  } else {
    opts = {
      actions: states
    };
    return await this.uiautomator2.jwproxy.command('/touch/multi/perform', 'POST', opts);
  }
};

commands.performActions = async function (actions) {
  this.log.debug(`Received the following W3C actions: ${JSON.stringify(actions, null, '  ')}`);
  const preprocessedActions = actions.map(action => Object.assign({}, action, action.type === 'pointer' ? {
    parameters: {
      pointerType: 'touch'
    }
  } : {}));
  this.log.debug(`Preprocessed actions: ${JSON.stringify(preprocessedActions, null, '  ')}`);
  return await this.uiautomator2.jwproxy.command('/actions', 'POST', {
    actions: preprocessedActions
  });
};

Object.assign(extensions, commands);
var _default = extensions;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy90b3VjaC5qcyJdLCJuYW1lcyI6WyJjb21tYW5kcyIsImV4dGVuc2lvbnMiLCJkb1BlcmZvcm1NdWx0aUFjdGlvbiIsImVsZW1lbnRJZCIsInN0YXRlcyIsIm9wdHMiLCJhY3Rpb25zIiwidWlhdXRvbWF0b3IyIiwiandwcm94eSIsImNvbW1hbmQiLCJwZXJmb3JtQWN0aW9ucyIsImxvZyIsImRlYnVnIiwiSlNPTiIsInN0cmluZ2lmeSIsInByZXByb2Nlc3NlZEFjdGlvbnMiLCJtYXAiLCJhY3Rpb24iLCJPYmplY3QiLCJhc3NpZ24iLCJ0eXBlIiwicGFyYW1ldGVycyIsInBvaW50ZXJUeXBlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxJQUFJQSxRQUFRLEdBQUcsRUFBZjtBQUFBLElBQW1CQyxVQUFVLEdBQUcsRUFBaEM7O0FBRUFELFFBQVEsQ0FBQ0Usb0JBQVQsR0FBZ0MsZ0JBQWdCQyxTQUFoQixFQUEyQkMsTUFBM0IsRUFBbUM7QUFDakUsTUFBSUMsSUFBSjs7QUFDQSxNQUFJRixTQUFKLEVBQWU7QUFDYkUsSUFBQUEsSUFBSSxHQUFHO0FBQ0xGLE1BQUFBLFNBREs7QUFFTEcsTUFBQUEsT0FBTyxFQUFFRjtBQUZKLEtBQVA7QUFLQSxXQUFPLE1BQU0sS0FBS0csWUFBTCxDQUFrQkMsT0FBbEIsQ0FBMEJDLE9BQTFCLENBQWtDLHNCQUFsQyxFQUEwRCxNQUExRCxFQUFrRUosSUFBbEUsQ0FBYjtBQUNELEdBUEQsTUFPTztBQUNMQSxJQUFBQSxJQUFJLEdBQUc7QUFDTEMsTUFBQUEsT0FBTyxFQUFFRjtBQURKLEtBQVA7QUFHQSxXQUFPLE1BQU0sS0FBS0csWUFBTCxDQUFrQkMsT0FBbEIsQ0FBMEJDLE9BQTFCLENBQWtDLHNCQUFsQyxFQUEwRCxNQUExRCxFQUFrRUosSUFBbEUsQ0FBYjtBQUNEO0FBQ0YsQ0FmRDs7QUFpQkFMLFFBQVEsQ0FBQ1UsY0FBVCxHQUEwQixnQkFBZ0JKLE9BQWhCLEVBQXlCO0FBQ2pELE9BQUtLLEdBQUwsQ0FBU0MsS0FBVCxDQUFnQix1Q0FBc0NDLElBQUksQ0FBQ0MsU0FBTCxDQUFlUixPQUFmLEVBQXdCLElBQXhCLEVBQThCLElBQTlCLENBQW9DLEVBQTFGO0FBRUEsUUFBTVMsbUJBQW1CLEdBQUdULE9BQU8sQ0FDaENVLEdBRHlCLENBQ3BCQyxNQUFELElBQVlDLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjLEVBQWQsRUFBa0JGLE1BQWxCLEVBQTBCQSxNQUFNLENBQUNHLElBQVAsS0FBZ0IsU0FBaEIsR0FBNEI7QUFDckVDLElBQUFBLFVBQVUsRUFBRTtBQUNWQyxNQUFBQSxXQUFXLEVBQUU7QUFESDtBQUR5RCxHQUE1QixHQUl2QyxFQUphLENBRFMsQ0FBNUI7QUFNQSxPQUFLWCxHQUFMLENBQVNDLEtBQVQsQ0FBZ0IseUJBQXdCQyxJQUFJLENBQUNDLFNBQUwsQ0FBZUMsbUJBQWYsRUFBb0MsSUFBcEMsRUFBMEMsSUFBMUMsQ0FBZ0QsRUFBeEY7QUFDQSxTQUFPLE1BQU0sS0FBS1IsWUFBTCxDQUFrQkMsT0FBbEIsQ0FBMEJDLE9BQTFCLENBQWtDLFVBQWxDLEVBQThDLE1BQTlDLEVBQXNEO0FBQUNILElBQUFBLE9BQU8sRUFBRVM7QUFBVixHQUF0RCxDQUFiO0FBQ0QsQ0FYRDs7QUFhQUcsTUFBTSxDQUFDQyxNQUFQLENBQWNsQixVQUFkLEVBQTBCRCxRQUExQjtlQUNlQyxVIiwic291cmNlc0NvbnRlbnQiOlsibGV0IGNvbW1hbmRzID0ge30sIGV4dGVuc2lvbnMgPSB7fTtcblxuY29tbWFuZHMuZG9QZXJmb3JtTXVsdGlBY3Rpb24gPSBhc3luYyBmdW5jdGlvbiAoZWxlbWVudElkLCBzdGF0ZXMpIHtcbiAgbGV0IG9wdHM7XG4gIGlmIChlbGVtZW50SWQpIHtcbiAgICBvcHRzID0ge1xuICAgICAgZWxlbWVudElkLFxuICAgICAgYWN0aW9uczogc3RhdGVzXG4gICAgfTtcblxuICAgIHJldHVybiBhd2FpdCB0aGlzLnVpYXV0b21hdG9yMi5qd3Byb3h5LmNvbW1hbmQoJy90b3VjaC9tdWx0aS9wZXJmb3JtJywgJ1BPU1QnLCBvcHRzKTtcbiAgfSBlbHNlIHtcbiAgICBvcHRzID0ge1xuICAgICAgYWN0aW9uczogc3RhdGVzXG4gICAgfTtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy51aWF1dG9tYXRvcjIuandwcm94eS5jb21tYW5kKCcvdG91Y2gvbXVsdGkvcGVyZm9ybScsICdQT1NUJywgb3B0cyk7XG4gIH1cbn07XG5cbmNvbW1hbmRzLnBlcmZvcm1BY3Rpb25zID0gYXN5bmMgZnVuY3Rpb24gKGFjdGlvbnMpIHtcbiAgdGhpcy5sb2cuZGVidWcoYFJlY2VpdmVkIHRoZSBmb2xsb3dpbmcgVzNDIGFjdGlvbnM6ICR7SlNPTi5zdHJpbmdpZnkoYWN0aW9ucywgbnVsbCwgJyAgJyl9YCk7XG4gIC8vIFRoaXMgaXMgbWFuZGF0b3J5LCBzaW5jZSBTZWxlbml1bSBBUEkgdXNlcyBNT1VTRSBhcyB0aGUgZGVmYXVsdCBwb2ludGVyIHR5cGVcbiAgY29uc3QgcHJlcHJvY2Vzc2VkQWN0aW9ucyA9IGFjdGlvbnNcbiAgICAubWFwKChhY3Rpb24pID0+IE9iamVjdC5hc3NpZ24oe30sIGFjdGlvbiwgYWN0aW9uLnR5cGUgPT09ICdwb2ludGVyJyA/IHtcbiAgICAgIHBhcmFtZXRlcnM6IHtcbiAgICAgICAgcG9pbnRlclR5cGU6ICd0b3VjaCdcbiAgICAgIH1cbiAgICB9IDoge30pKTtcbiAgdGhpcy5sb2cuZGVidWcoYFByZXByb2Nlc3NlZCBhY3Rpb25zOiAke0pTT04uc3RyaW5naWZ5KHByZXByb2Nlc3NlZEFjdGlvbnMsIG51bGwsICcgICcpfWApO1xuICByZXR1cm4gYXdhaXQgdGhpcy51aWF1dG9tYXRvcjIuandwcm94eS5jb21tYW5kKCcvYWN0aW9ucycsICdQT1NUJywge2FjdGlvbnM6IHByZXByb2Nlc3NlZEFjdGlvbnN9KTtcbn07XG5cbk9iamVjdC5hc3NpZ24oZXh0ZW5zaW9ucywgY29tbWFuZHMpO1xuZXhwb3J0IGRlZmF1bHQgZXh0ZW5zaW9ucztcbiJdLCJmaWxlIjoibGliL2NvbW1hbmRzL3RvdWNoLmpzIiwic291cmNlUm9vdCI6Ii4uLy4uLy4uIn0=
