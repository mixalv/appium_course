export default class PluginCommand extends ExtensionCommand<any> {
    /**
     *
     * @param {PluginCommandOptions} opts
     */
    constructor({ config, json }: PluginCommandOptions);
    knownExtensions: Readonly<{
        readonly images: "@appium/images-plugin";
        readonly 'execute-driver': "@appium/execute-driver-plugin";
        readonly 'relaxed-caps': "@appium/relaxed-caps-plugin";
    }>;
    install({ plugin, installType, packageName }: {
        plugin: any;
        installType: any;
        packageName: any;
    }): Promise<import("./extension-command").ExtRecord<any>>;
    uninstall({ plugin }: {
        plugin: any;
    }): Promise<import("./extension-command").ExtRecord<any>>;
    update({ plugin, unsafe }: {
        plugin: any;
        unsafe: any;
    }): Promise<import("./extension-command").ExtensionUpdateResult>;
    run({ plugin, scriptName }: {
        plugin: any;
        scriptName: any;
    }): Promise<import("./extension-command").RunOutput>;
    getPostInstallText({ extName, extData }: {
        extName: any;
        extData: any;
    }): string;
    validateExtensionFields(appiumPkgData: any): void;
}
export type PluginCommandOptions = {
    config: import('../extension/extension-config').ExtensionConfig<import('../extension/manifest').PluginType>;
    json: boolean;
};
import ExtensionCommand from "./extension-command";
//# sourceMappingURL=plugin-command.d.ts.map